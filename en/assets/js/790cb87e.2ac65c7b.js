"use strict";(self.webpackChunkextreal=self.webpackChunkextreal||[]).push([[5398],{2518:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var s=a(9668),n=(a(6540),a(5680)),r=a(7443);const o={sidebar_position:1},i="Asset Workflow using Addressables",l={unversionedId:"integration/asset-workflow.addressables",id:"integration/asset-workflow.addressables",title:"Asset Workflow using Addressables",description:"What for?",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/integration/asset-workflow.addressables.md",sourceDirName:"integration",slug:"/integration/asset-workflow.addressables",permalink:"/Extreal.Guide/en/next/integration/asset-workflow.addressables",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Integration",permalink:"/Extreal.Guide/en/next/category/integration"},next:{title:"Chat using OME",permalink:"/Extreal.Guide/en/next/integration/chat.ome"}},d={},p=[{value:"What for?",id:"what-for",level:2},{value:"Specification",id:"specification",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Addressables wrapper",id:"addressables-wrapper",level:3},{value:"Addressables customization",id:"addressables-customization",level:3},{value:"Installation",id:"installation",level:2},{value:"Package",id:"package",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Settings",id:"settings",level:3},{value:"Usage",id:"usage",level:2},{value:"Use Addressables features",id:"use-addressables-features",level:3},{value:"Reconnect when asset downloads fail to connect",id:"assets-addressables-retry",level:3},{value:"Add processing triggered by asset download state",id:"assets-addressables-event",level:3},{value:"Encrypt and decrypt assets",id:"assets-addressables-crypto",level:3}],c={toc:p},y="wrapper";function u(e){let{components:t,...a}=e;return(0,n.yg)(y,(0,s.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"asset-workflow-using-addressables"},"Asset Workflow using Addressables"),(0,n.yg)("h2",{id:"what-for"},"What for?"),(0,n.yg)("p",null,"We provide a wrapper that makes ",(0,n.yg)("a",{parentName:"p",href:"https://docs.unity3d.com/Packages/com.unity.addressables@1.21/manual/index.html"},"Addressables")," easier to use in applications."),(0,n.yg)("p",null,"We will call this feature, which wraps Addressables, the Addressables wrapper."),(0,n.yg)("p",null,"The Addressables wrapper provides features to facilitate the creation of download status displays and asset encryption/decryption, which are necessary for applications using Addressables."),(0,n.yg)("p",null,"The goal is to make Addressables introduction smooth by using the Addressables wrapper in your applications."),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"The  wrapper makes Addressables easier to use, but it does not mean that you only need to know the Addressables wrapper to realize asset workflow without knowing Addressables.\nThe Addressables wrapper compensates for the difficulties and lack of features when using Addressables as it is, but transfers the asset workflow processing to Addressables.\nTherefore, to use the Addressables wrapper, it is assumed that you know Addressables.\nIf you do not know Addressables, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/learning/intro#asset-workflow"},"Learning")," to learn about Addressables.\nThis guide assumes you know Addressables.")),(0,n.yg)("h2",{id:"specification"},"Specification"),(0,n.yg)("p",null,"The specifications of the Addressables wrapper are as follows."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"You can use Addressables features."),(0,n.yg)("li",{parentName:"ul"},"Reconnect when asset downloads fail to connect."),(0,n.yg)("li",{parentName:"ul"},"You can add processing triggered by asset download state."),(0,n.yg)("li",{parentName:"ul"},"You can encrypt and decrypt assets.")),(0,n.yg)("h2",{id:"architecture"},"Architecture"),(0,n.yg)("h3",{id:"addressables-wrapper"},"Addressables wrapper"),(0,n.yg)(r.K,{chart:"classDiagram\n\n    AssetProvider ..> AssetDisposable\n    AssetProvider ..> Addressables\n    AssetDisposable ..> Addressables\n    DisposableBase <|-- AssetProvider\n    DisposableBase <|-- AssetDisposable\n\n    class AssetProvider {\n        +OnDownloading IObservable\n        +OnDownloaded IObservable\n        +OnConnectRetrying IObservable\n        +OnConnectRetried IObservable\n        +AssetProvider(retryStrategy)\n        +DownloadAsync(assetName, downloadStatusInterval, nextFunc) void\n        +GetDownloadSizeAsync(assetName) long\n        +LoadAssetAsync(assetName) AssetDisposable\n        +LoadAssetAsync() AssetDisposable\n        +LoadSceneAsync(assetName, loadMode) AssetDisposable\n    }\n\n    class AssetDisposable {\n        +Result TResult\n    }\n\n    class DisposableBase {\n        <<extreal>>\n    }\n    \n    class Addressables {\n        <<Addressables>>\n    }",mdxType:"Mermaid"}),(0,n.yg)("h3",{id:"addressables-customization"},"Addressables customization"),(0,n.yg)(r.K,{chart:"classDiagram\n\n    BuildScriptBase <|-- BuildScriptEncryptMode\n    ResourceProviderBase <|-- CryptoAssetBundleProviderBase\n    IAssetBundleResource <|.. CryptoAssetBundleResource\n    DownloadHandlerScript <|-- DownloadHandlerFileWithDecryption\n    BuildScriptEncryptMode ..> ICryptoStreamFactory\n    CryptoAssetBundleProviderBase ..> ICryptoStreamFactory\n    CryptoAssetBundleResource ..> ICryptoStreamFactory\n    DownloadHandlerFileWithDecryption ..> ICryptoStreamFactory\n    CryptoAssetBundleProviderBase ..> CryptoAssetBundleResource\n    CryptoAssetBundleResource ..> DownloadHandlerFileWithDecryption\n\n    class ResourceProviderBase {\n        <<ResourceManager>>\n    }\n    \n    class CryptoAssetBundleProviderBase {\n    }\n    \n    class IAssetBundleResource {\n        <<ResourceManager>>\n    }\n\n    class CryptoAssetBundleResource {\n    }\n\n    class DownloadHandlerScript {\n        <<Networking>>\n    }\n\n    class DownloadHandlerFileWithDecryption {\n    }\n\n    class ICryptoStreamFactory {\n        <<interface>>\n        +CreateEncryptStream(baseStream, options) CryptoStream\n        +CreateDecryptStream(baseStream, options) CryptoStream\n    }\n    \n    class BuildScriptBase {\n        <<Addressables>>\n    }\n    \n    class BuildScriptEncryptMode {\n        <<editor>>\n    }",mdxType:"Mermaid"}),(0,n.yg)("h2",{id:"installation"},"Installation"),(0,n.yg)("h3",{id:"package"},"Package"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-text"},"https://github.com/extreal-dev/Extreal.Integration.AssetWorkflow.Addressables.git\n")),(0,n.yg)("admonition",{type:"info"},(0,n.yg)("p",{parentName:"admonition"},"Asset encryption and decryption feature is not available in WebGL, so we separated out the assembly definition and excluded WebGL from the platform so that it would not be compiled when building for the WebGL platform. Therefore, if you want to use the asset encryption and decryption feature, please add ",(0,n.yg)("inlineCode",{parentName:"p"},"Extreal.Integration.AssetWorkflow.Addressables.Custom.ResourceProviders")," to the Assembly Definition.")),(0,n.yg)("h3",{id:"dependencies"},"Dependencies"),(0,n.yg)("p",null,"The Addressables wrapper uses the following packages."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/core/logging"},"Extreal.Core.Logging")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/core/common"},"Extreal.Core.Common")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.unity3d.com/Packages/com.unity.addressables@1.21/manual/index.html"},"Addressables")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/Cysharp/UniTask"},"UniTask")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/neuecc/UniRx"},"UniRx"))),(0,n.yg)("p",null,"Please refer to ",(0,n.yg)("a",{parentName:"p",href:"../category/release"},"Release")," for the correspondence between module version and each package version."),(0,n.yg)("h3",{id:"settings"},"Settings"),(0,n.yg)("p",null,"There are no special settings when used by default.\nSee ",(0,n.yg)("a",{parentName:"p",href:"#assets-addressables-crypto"},"encryption and decryption")," for encryption and decryption of assets."),(0,n.yg)("h2",{id:"usage"},"Usage"),(0,n.yg)("h3",{id:"use-addressables-features"},"Use Addressables features"),(0,n.yg)("p",null,"The features of Addressables are provided by the AssetProvider class.\nFeatures not provided by AssetProvider should be implemented directly using Addressables."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},"var assetProvider = new AssetProvider();\n")),(0,n.yg)("p",null,"Here are some basic uses of AssetProvider."),(0,n.yg)("p",null,"Use the GetDownloadSizeAsync method to get the download size."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'var size = await assetProvider.GetDownloadSizeAsync("AssetName");\n')),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"AssetProvider.GetDownloadSizeAsync method returns 0 if the asset is cached, while the AssetProvider,\n2022.1+ and when used on the WebGL platform, it returns the file size even if the asset is cached.\nThis behavior is due to the specification of the Addressables.GetDownloadSizeAsync method. For more information ",(0,n.yg)("a",{parentName:"p",href:"https://forum.unity.com/threads/in-2022-2-xx-webgl-builds-getdownloadsizeasync-does-not-reflect-the-cache.1440877/"},"Unity Forum"),".")),(0,n.yg)("p",null,"Use the DownloadAsync method to download assets."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'assetProvider.DownloadAsync("AssetName").Forget();\n')),(0,n.yg)("p",null,"You can also specify post-download processing, such as loading assets after downloading and then transitioning to the next stage."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'Func<UniTask> navigate = async () =>\n{\n    MessageConfig = await LoadAsync<MessageConfig>();\n    stageNavigator.ReplaceAsync(nextStage).Forget();\n};\nassetProvider.DownloadAsync("AssetName", nextFunc: navigate).Forget();\n')),(0,n.yg)("p",null,"Use ",(0,n.yg)("a",{parentName:"p",href:"#assets-addressables-event"},"event notification")," if you want to run processing based on the download status."),(0,n.yg)("p",null,"Use the LoadAssetAsync method to load an asset."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'using var assetDisposable = await assetProvider.LoadAssetAsync<GameObject>("AssetName");\nvar prefab = assetDisposable.Result;\n')),(0,n.yg)("p",null,"Methods that load assets or scenes return AssetDisposable.\nAssetDisposable is a class that enables the release of loaded assets with IDisposable's Dispose.\nAssetDisposable handles an asset in the same way as other classes that implement IDisposable.\nLoaded asset is obtained from the Result property of AssetDisposable."),(0,n.yg)("p",null,"If you use the type name as the asset name, such as ScriptableObject, you can load an asset without specifying the asset name."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'// Asset name: "ChatConfig"\nusing var assetDisposable = await assetProvider.LoadAssetAsync<ChatConfig>();\nvar chatConfig = assetDisposable.Result;\n')),(0,n.yg)("p",null,"Use the LoadSceneAsync method to load a scene."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'using var assetDisposable = await assetProvider.LoadSceneAsync("VirtualSpace");\nvar sceneInstance = assetDisposable.Result;\n')),(0,n.yg)("h3",{id:"assets-addressables-retry"},"Reconnect when asset downloads fail to connect"),(0,n.yg)("p",null,"AssetProvider uses the retry processing provided by ",(0,n.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/core/common"},"Common")," to reconnect when communication is disconnected.\nThe following description assumes that you are familiar with the retry processing, so if you have not checked the retry processing, please check the ",(0,n.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/core/common#core-common-retry"},"retry processing")," first."),(0,n.yg)("p",null,"AssetProvider does not reconnect by default.\nSpecifying a retry strategy in the AssetProvider constructor will reconnect."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},"var assetProvider = new AssetProvider(new CountingRetryStrategy());\n")),(0,n.yg)("p",null,"The reconnection processing handled by AssetProvider is as follows."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"When to run reconnection",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"If the asset download failed",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"This includes cases where asset loading fails, since downloading occurs even when an asset is loaded without having downloaded the asset."))))),(0,n.yg)("li",{parentName:"ul"},"Reconnection processing details",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"If the asset download failed",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Repeat the connection according to the retry strategy.")))))),(0,n.yg)("p",null,"Use ",(0,n.yg)("a",{parentName:"p",href:"#assets-addressables-event"},"event notifications")," if you want to run processing based on the status of retry processing."),(0,n.yg)("h3",{id:"assets-addressables-event"},"Add processing triggered by asset download state"),(0,n.yg)("p",null,"AssetProvider has the following event notifications."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"OnDownloading",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Timing\uff1aJust before downloading"),(0,n.yg)("li",{parentName:"ul"},"Type\uff1aIObservable"),(0,n.yg)("li",{parentName:"ul"},"Parameters\uff1aAsset name"))),(0,n.yg)("li",{parentName:"ul"},"OnDownloaded",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Timing\uff1aImmediately after download (including during processing)"),(0,n.yg)("li",{parentName:"ul"},"Type\uff1aIObservable"),(0,n.yg)("li",{parentName:"ul"},"Parameters\uff1aDownload status",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Asset name, total bytes, downloaded bytes, percentages, etc."))))),(0,n.yg)("li",{parentName:"ul"},"OnConnectRetrying",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Timing\uff1aJust before retrying the connection"),(0,n.yg)("li",{parentName:"ul"},"Type\uff1aIObservable"),(0,n.yg)("li",{parentName:"ul"},"Parameters\uff1aRetry count",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"The first time is ",(0,n.yg)("inlineCode",{parentName:"li"},"1")," and the second time is ",(0,n.yg)("inlineCode",{parentName:"li"},"2"),"."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"1")," means the start of retry strategy running."))))),(0,n.yg)("li",{parentName:"ul"},"OnConnectRetried",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Timing\uff1aImmediately after connection retry is finished",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"If the retry is canceled, it will not be notified."))),(0,n.yg)("li",{parentName:"ul"},"Type\uff1aIObservable"),(0,n.yg)("li",{parentName:"ul"},"Parameters\uff1aRetry result",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"true: If the retry strategy is run and the retry is successful"),(0,n.yg)("li",{parentName:"ul"},"false: If the retry strategy is run and the retry is not successful finally")))))),(0,n.yg)("h3",{id:"assets-addressables-crypto"},"Encrypt and decrypt assets"),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"This feature is not available in WebGL.")),(0,n.yg)("admonition",{type:"caution"},(0,n.yg)("p",{parentName:"admonition"},"Note that using this feature alone is weak protection for intellectual property."),(0,n.yg)("p",{parentName:"admonition"},"By using this feature, if someone obtains only encrypted assets, they will not be able to decrypt them.\nFor example, even if the URL of the asset download destination is known, the asset cannot be decrypted, thus preventing misappropriation of the asset."),(0,n.yg)("p",{parentName:"admonition"},"However, if the encryption algorithm and the key used for decryption (implementation of ICryptoStreamFactory) are embedded in the application, the information necessary for decryption can be accessed and decrypted through reverse engineering.\nTherefore, for the purpose of intellectual property protection, it is necessary to prevent decryption from the application by reverse engineering in addition to this feature.")),(0,n.yg)("p",null,"Customize Addressables build scripts and ResourceProvider to encrypt and decrypt assets.\nThe following classes are provided."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Build script to encrypt assets",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"BuildScriptEncryptMode"))),(0,n.yg)("li",{parentName:"ul"},"ResourceProvider to decrypt assets",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"CryptoAssetBundleProviderBase"),(0,n.yg)("li",{parentName:"ul"},"CryptoAssetBundleResource"),(0,n.yg)("li",{parentName:"ul"},"DownloadHandlerFileWithDecryption"))),(0,n.yg)("li",{parentName:"ul"},"Factory that creates the CryptoStream used to encrypt and decrypt the asset",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"ICryptoStreamFactory")))),(0,n.yg)("p",null,"These classes are related as follows."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Since the cryptographic algorithm to be used and the management of keys vary depending on the security level required by the application, an ICryptoStreamFactory is provided to implement for their processing."),(0,n.yg)("li",{parentName:"ul"},"To embed ICryptoStreamFactory, CryptoAssetBundleProviderBase is provided as a Base class."),(0,n.yg)("li",{parentName:"ul"},"CryptoAssetBundleProviderBase decrypts assets using ICryptoStreamFactory. (Actually CryptoAssetBundleResource and DownloadHandlerFileWithDecryption do it)"),(0,n.yg)("li",{parentName:"ul"},"BuildScriptEncryptMode encrypts using ICryptoStreamFactory if the ResourceProvider specified in the Asset Group at build execution is a class that extends CryptoAssetBundleProviderBase, and Otherwise, encryption is not executed.")),(0,n.yg)("p",null,"The following is an instruction on how to apply this feature."),(0,n.yg)("p",null,"First, set up a build script to encrypt the assets as follows."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Create a ScriptableObject from the ",(0,n.yg)("inlineCode",{parentName:"li"},"Extreal > Integration.AssetWorkflow.Addressables.Editor > Encrypt Build Script")," in the Create Asset menu."),(0,n.yg)("li",{parentName:"ul"},"Add the ScriptableObject you created to the ",(0,n.yg)("inlineCode",{parentName:"li"},"Build and Play Mode Scripts")," from the ",(0,n.yg)("inlineCode",{parentName:"li"},"AddressablesAssetSettings")," inspector.")),(0,n.yg)("p",null,"This setting allows you to choose ",(0,n.yg)("inlineCode",{parentName:"p"},"Build > New Build > Encrypt Build Script")," in the ",(0,n.yg)("inlineCode",{parentName:"p"},"Addressables Group")," window."),(0,n.yg)("p",null,"Next, set up the ResourceProvider that decrypts the asset.\nICryptoStreamFactory must be implemented first.\nImplement ICryptoStreamFactory according to the requirements of your application.\nAn example implementation using AES is shown below to give an idea of the implementation."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'public class CryptoStreamFactory : ICryptoStreamFactory\n{\n    public CryptoStream CreateEncryptStream(Stream baseStream, AssetBundleRequestOptions options)\n        => CreateCryptoStream(baseStream, options, CryptoStreamMode.Write);\n\n    public CryptoStream CreateDecryptStream(Stream baseStream, AssetBundleRequestOptions options)\n        => CreateCryptoStream(baseStream, options, CryptoStreamMode.Read);\n\n    private static CryptoStream CreateCryptoStream\n    (\n        Stream baseStream,\n        AssetBundleRequestOptions options,\n        CryptoStreamMode mode\n    )\n    {\n        using var aes = CreateAesManaged(options);\n        var cryptor = mode == CryptoStreamMode.Write ? aes.CreateEncryptor() : aes.CreateDecryptor();\n        return new CryptoStream(baseStream, cryptor, mode);\n    }\n\n    [SuppressMessage("Usage", "CC0022")]\n    private static AesManaged CreateAesManaged(AssetBundleRequestOptions options)\n    {\n        const int keyLength = 128;\n        var salt = Encoding.UTF8.GetBytes(options.BundleName);\n\n        using var keyGen = new Rfc2898DeriveBytes(SecretVariables.CryptAssetPassword, salt, 100, HashAlgorithmName.SHA256);\n        using var ivGen = new Rfc2898DeriveBytes(SecretVariables.CryptAssetIv, salt, 1, HashAlgorithmName.SHA256);\n\n        var key = keyGen.GetBytes(keyLength / 8);\n        var iv = ivGen.GetBytes(keyLength / 8);\n\n        return new AesManaged\n        {\n            BlockSize = keyLength,\n            KeySize = keyLength,\n            Mode = CipherMode.CBC,\n            Padding = PaddingMode.PKCS7,\n            Key = key,\n            IV = iv\n        };\n    }\n}\n')),(0,n.yg)("p",null,"Implement a class that extends CryptoAssetBundleProviderBase.\nReturn a class that implements ICryptoStreamFactory."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-csharp"},'[DisplayName("Crypto AssetBundle Provider")]\npublic class CryptoAssetBundleProvider : CryptoAssetBundleProviderBase\n{\n    public override ICryptoStreamFactory CryptoStreamFactory => new CryptoStreamFactory();\n}\n')),(0,n.yg)("p",null,"Now you can select the implemented class as the ",(0,n.yg)("inlineCode",{parentName:"p"},"Content Packing & Loading > Advanced Options > Asset Bundle Provider")," from the inspector of the ",(0,n.yg)("inlineCode",{parentName:"p"},"Addressables Asset Group"),"."))}u.isMDXComponent=!0}}]);