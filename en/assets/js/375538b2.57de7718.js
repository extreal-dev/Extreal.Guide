"use strict";(self.webpackChunkextreal=self.webpackChunkextreal||[]).push([[5290],{1884:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>g});var n=a(9668),i=(a(6540),a(5680)),l=a(7443);const o={sidebar_position:2},r="Chat using OME",c={unversionedId:"integration/chat.ome",id:"integration/chat.ome",title:"Chat using OME",description:"What for?",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/integration/chat.ome.md",sourceDirName:"integration",slug:"/integration/chat.ome",permalink:"/Extreal.Guide/en/next/integration/chat.ome",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Asset Workflow using Addressables",permalink:"/Extreal.Guide/en/next/integration/asset-workflow.addressables"},next:{title:"Chat using Vivox",permalink:"/Extreal.Guide/en/next/integration/chat.vivox"}},s={},g=[{value:"What for?",id:"what-for",level:2},{value:"Specification",id:"specification",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Unity",id:"unity",level:3},{value:"JavaScript",id:"javascript",level:3},{value:"Installation",id:"installation",level:2},{value:"Package",id:"package",level:3},{value:"Unity",id:"unity-1",level:4},{value:"npm",id:"npm",level:4},{value:"Dependencies",id:"dependencies",level:3},{value:"Unity",id:"unity-2",level:4},{value:"npm",id:"npm-1",level:4},{value:"Settings",id:"settings",level:3},{value:"Usage",id:"usage",level:2},{value:"Do voice chat with SFU",id:"do-voice-chat-with-sfu",level:3},{value:"Add a processing triggered by the client&#39;s state in voice chat",id:"add-a-processing-triggered-by-the-clients-state-in-voice-chat",level:3}],u={toc:g},p="wrapper";function h(e){let{components:t,...a}=e;return(0,i.yg)(p,(0,n.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"chat-using-ome"},"Chat using OME"),(0,i.yg)("h2",{id:"what-for"},"What for?"),(0,i.yg)("p",null,"SFU (Selective Forwarding Unit) is a means to communicate on a large scale in the virtual space, etc. with the lowest cost possible."),(0,i.yg)("p",null,"This module provides voice chat with SFU for Native (C#) and WebGL (JavaScript)."),(0,i.yg)("h2",{id:"specification"},"Specification"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"You can do voice chat with SFU."),(0,i.yg)("li",{parentName:"ul"},"You can add a processing triggered by the client's state of voice chat.")),(0,i.yg)("h2",{id:"architecture"},"Architecture"),(0,i.yg)("h3",{id:"unity"},"Unity"),(0,i.yg)(l.K,{chart:"classDiagram\n\n    VoiceChatClientProvider ..> VoiceChatClient\n    VoiceChatClientProvider ..> VoiceChatConfig\n    VoiceChatClient <|-- NativeVoiceChatClient\n    VoiceChatClient <|-- WebGLVoiceChatClient\n\n    class VoiceChatClientProvider {\n        +Provide(omeClient, voiceChatConfig)$ VoiceChatClient\n    }\n\n    class VoiceChatConfig {\n    }\n\n    class VoiceChatClient {\n        +OnMuted IObservable\n        +OnAudioLevelChanged IObservable\n        +Clear() void\n        +HasMicrophone() bool\n        +ToggleMute() void\n        +SetInVolume(volume) void\n        +SetOutVolume(volume) void\n    }\n    \n    class NativeVoiceChatClient {\n    }\n    \n    class WebGLVoiceChatClient {\n    }",mdxType:"Mermaid"}),(0,i.yg)("h3",{id:"javascript"},"JavaScript"),(0,i.yg)(l.K,{chart:"classDiagram\n\n    WebGLVoiceChatClient ..> WebGLHelper\n    WebGLHelper ..> VoiceChatClient\n    VoiceChatAdapter ..> VoiceChatClient\n    \n    class WebGLHelper {\n        <<C#>>\n    }\n\n    class WebGLVoiceChatClient {\n        <<C#>>\n    }\n\n    class VoiceChatAdapter {\n        <<TypeScript>>\n    }\n    \n    class VoiceChatClient {\n        <<TypeScript>>\n    }",mdxType:"Mermaid"}),(0,i.yg)("h2",{id:"installation"},"Installation"),(0,i.yg)("h3",{id:"package"},"Package"),(0,i.yg)("h4",{id:"unity-1"},"Unity"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"https://github.com/extreal-dev/Extreal.Integration.Chat.OME.git\n")),(0,i.yg)("h4",{id:"npm"},"npm"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"@extreal-dev/extreal.integration.chat.ome\n")),(0,i.yg)("h3",{id:"dependencies"},"Dependencies"),(0,i.yg)("p",null,"This module uses the following packages."),(0,i.yg)("h4",{id:"unity-2"},"Unity"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/core/logging"},"Extreal.Core.Logging")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/core/common"},"Extreal.Core.Common")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/integration/web.common"},"Extreal.Integration.Web.Common")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/Extreal.Guide/en/next/integration/sfu.ome"},"Extreal.Integration.SFU.OME")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/Cysharp/UniTask"},"UniTask")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/neuecc/UniRx"},"UniRx")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://docs.unity3d.com/Packages/com.unity.webrtc@3.0/manual/index.html"},"WebRTC"))),(0,i.yg)("h4",{id:"npm-1"},"npm"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/@extreal-dev/extreal.integration.web.common"},"@extreal-dev/extreal.integration.web.common")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/@extreal-dev/extreal.integration.sfu.ome"},"@extreal-dev/extreal.integration.sfu.ome"))),(0,i.yg)("h3",{id:"settings"},"Settings"),(0,i.yg)("p",null,"This module uses ",(0,i.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/integration/sfu.ome"},"SFU.OME")," to realize SFU.\nTherefore, ",(0,i.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/integration/sfu.ome#settings"},"Settings of SFU.OME")," is required.\nAdd the following initialization after setting up SFU.OME."),(0,i.yg)("p",null,"Create a Client with Provider."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},'public class ClientControlScope : LifetimeScope\n{\n    protected override void Configure(IContainerBuilder builder)\n    {\n        var omeConfig = new OmeConfig("http://localhost:3040");\n        var omeClient = OmeClientProvider.Provide(omeConfig);\n        builder.RegisterComponent(omeClient);\n\n        var voiceChatClient = VoiceChatClientProvider.Provide(omeClient);\n        builder.RegisterComponent(voiceChatClient);\n\n        builder.RegisterEntryPoint<ClientControlPresenter>();\n    }\n}\n')),(0,i.yg)("p",null,"If you want to use it with WebGL, you will need to initialize JavaScript further.\nCreate Adapter and call adapt function."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},'import { OmeAdapter } from "@extreal-dev/extreal.integration.sfu.ome";\nimport { VoiceChatAdapter } from "@extreal-dev/extreal.integration.chat.ome";\n\n\nconst omeAdapter = new OmeAdapter();\nomeAdapter.adapt();\n\nconst voiceChatAdapter = new VoiceChatAdapter();\nvoiceChatAdapter.adapt(omeAdapter.getOmeClient);\n')),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("h3",{id:"do-voice-chat-with-sfu"},"Do voice chat with SFU"),(0,i.yg)("p",null,"Voice chat is realized using ",(0,i.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/integration/sfu.ome"},"SFU.OME")," for SFU.\nPlease use ",(0,i.yg)("a",{parentName:"p",href:"/Extreal.Guide/en/next/integration/sfu.ome#sfu-ome-establish-connection"},"SFU.OME API")," to establish SFU connection."),(0,i.yg)("p",null,"Voice Chat features are provided by VoiceChatClient."),(0,i.yg)("p",null,"Use the ToggleMute method to switch mute."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"voiceChatClient.ToggleMute();\n")),(0,i.yg)("p",null,"The value (bool) after switching to mute is received in the OnMuted event."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"voiceChatClient.OnMuted\n    .Subscribe(muted =>\n    {\n        // do something\n    })\n    .AddTo(disposables);\n")),(0,i.yg)("p",null,"If you want to specify the default value for mute, specify it in VoiceChatConfig."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"var voiceChatConfig = new VoiceChatConfig(initialMute: false);\nvar voiceChatClient = VoiceChatClientProvider.Provide(omeClient, voiceChatConfig);\n")),(0,i.yg)("p",null,"Use SetInVolume method to adjust the input volume.\nEnter a float value between 0 and 1 for the argument volume."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"voiceChatClient.SetInVolume(volume);\n")),(0,i.yg)("p",null,"If you want to specify an initial value for the input volume, use VoiceChatConfig."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"var voiceChatConfig = new VoiceChatConfig(initialInVolume: 0.8f);\nvar voiceChatClient = VoiceChatClientProvider.Provide(omeClient, voiceChatConfig);\n")),(0,i.yg)("p",null,"Use SetOutVolume method to adjust the output volume.\nEnter a float value between 0 and 1 for the argument volume."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"voiceChatClient.SetOutVolume(volume);\n")),(0,i.yg)("p",null,"If you want to specify an initial value for the output volume, use VoiceChatConfig."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"var voiceChatConfig = new VoiceChatConfig(initialOutVolume: 0.8f);\nvar voiceChatClient = VoiceChatClientProvider.Provide(omeClient, voiceChatConfig);\n")),(0,i.yg)("h3",{id:"add-a-processing-triggered-by-the-clients-state-in-voice-chat"},"Add a processing triggered by the client's state in voice chat"),(0,i.yg)("p",null,"VoiceChatClient has the following event notifications"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"OnAudioLevelChanged",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Timing: When there is a change in speech volume at a specified frequency."),(0,i.yg)("li",{parentName:"ul"},"Type: IObservable"),(0,i.yg)("li",{parentName:"ul"},"Parameters: ID and speech volume pair")))),(0,i.yg)("p",null,"If you want to specify the frequency at which the speech volume is acquired, specify it in VoiceChatConfig."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-csharp"},"var voiceChatConfig = new VoiceChatConfig(InitialAudioLevelCheckIntervalSeconds: 0.5f);\nvar voiceChatClient = VoiceChatClientProvider.Provide(omeClient, voiceChatConfig);\n")))}h.isMDXComponent=!0}}]);