"use strict";(self.webpackChunkextreal=self.webpackChunkextreal||[]).push([[9552],{7172:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var i=t(7624),r=t(5788);const a={sidebar_position:6},l="Chat using WebRTC",c={id:"integration/chat.webrtc",title:"Chat using WebRTC",description:"What for?",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/integration/chat.webrtc.md",sourceDirName:"integration",slug:"/integration/chat.webrtc",permalink:"/Extreal.Guide/en/next/integration/chat.webrtc",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"P2P using WebRTC",permalink:"/Extreal.Guide/en/next/integration/p2p.webrtc"},next:{title:"Sample Application",permalink:"/Extreal.Guide/en/next/category/sample-application"}},s={},o=[{value:"What for?",id:"what-for",level:2},{value:"Specification",id:"specification",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Unity",id:"unity",level:3},{value:"JavaScript",id:"javascript",level:3},{value:"Installation",id:"installation",level:2},{value:"Package",id:"package",level:3},{value:"Unity",id:"unity-1",level:4},{value:"npm",id:"npm",level:4},{value:"Dependencies",id:"dependencies",level:3},{value:"Unity",id:"unity-2",level:4},{value:"npm",id:"npm-1",level:4},{value:"Settings",id:"settings",level:3},{value:"Usage",id:"usage",level:2},{value:"Perform P2P text chat",id:"perform-p2p-text-chat",level:3},{value:"Perform P2P voice chat",id:"perform-p2p-voice-chat",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.MN)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"chat-using-webrtc",children:"Chat using WebRTC"}),"\n",(0,i.jsx)(n.h2,{id:"what-for",children:"What for?"}),"\n",(0,i.jsx)(n.p,{children:"P2P(Peer to Peer) is a means of communication with the lowest possible cost."}),"\n",(0,i.jsx)(n.p,{children:"This module provides P2P text/voice chat for Native(C#) and WebGL(JavaScript)."}),"\n",(0,i.jsx)(n.h2,{id:"specification",children:"Specification"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"P2P text chat is available."}),"\n",(0,i.jsx)(n.li,{children:"P2P voice chat is available."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"unity",children:"Unity"}),"\n",(0,i.jsx)(n.mermaid,{chart:"classDiagram\n\n    TextChatClientProvider ..> TextChatClient\n    TextChatClient <|-- NativeTextChatClient\n    TextChatClient <|-- WebGLTextChatClient\n    VoiceChatClientProvider ..> VoiceChatClient\n    VoiceChatClientProvider ..> VoiceChatConfig\n    VoiceChatClient <|-- NativeVoiceChatClient\n    VoiceChatClient <|-- WebGLVoiceChatClient\n\n    class TextChatClientProvider {\n        +Provide(peerClient)$ TextChatClient\n    }\n    \n    class TextChatClient {\n        +OnMessageReceived IObservable\n        +Send(message) void\n        +Clear() void\n    }\n    \n    class NativeTextChatClient {\n    }\n    \n    class WebGLTextChatClient {\n    }\n\n    class VoiceChatClientProvider {\n        +Provide(peerClient, config)$ VoiceChatClient\n    }\n\n    class VoiceChatConfig {\n    }\n\n    class VoiceChatClient {\n        +OnMuted IObservable\n        +ToggleMute() void\n        +Clear() void\n    }\n    \n    class NativeVoiceChatClient {\n    }\n    \n    class WebGLVoiceChatClient {\n    }"}),"\n",(0,i.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,i.jsx)(n.mermaid,{chart:"classDiagram\n\n    WebGLTextChatClient ..> WebGLHelper\n    WebGLHelper ..> TextChatClient\n    TextChatAdapter ..> TextChatClient\n    WebGLVoiceChatClient ..> WebGLHelper\n    WebGLHelper ..> VoiceChatClient\n    VoiceChatAdapter ..> VoiceChatClient\n    \n    class WebGLHelper {\n        <<C#>>\n    }\n\n    class WebGLTextChatClient {\n        <<C#>>\n    }\n\n    class WebGLVoiceChatClient {\n        <<C#>>\n    }\n\n    class TextChatAdapter {\n        <<TypeScript>>\n    }\n    \n    class TextChatClient {\n        <<TypeScript>>\n    }\n\n    class VoiceChatAdapter {\n        <<TypeScript>>\n    }\n    \n    class VoiceChatClient {\n        <<TypeScript>>\n    }"}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"package",children:"Package"}),"\n",(0,i.jsx)(n.h4,{id:"unity-1",children:"Unity"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://github.com/extreal-dev/Extreal.Integration.Chat.WebRTC.git\n"})}),"\n",(0,i.jsx)(n.h4,{id:"npm",children:"npm"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"@extreal-dev/extreal.integration.chat.webrtc\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"This module uses the following packages."}),"\n",(0,i.jsx)(n.h4,{id:"unity-2",children:"Unity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/core/logging",children:"Extreal.Core.Logging"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/core/common",children:"Extreal.Core.Common"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/web.common",children:"Extreal.Integration.Web.Common"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc",children:"Extreal.Integration.P2P.WebRTC"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.unity3d.com/Packages/com.unity.webrtc@3.0/manual/index.html",children:"WebRTC"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Cysharp/UniTask",children:"UniTask"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/neuecc/UniRx",children:"UniRx"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"npm-1",children:"npm"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@extreal-dev/extreal.integration.web.common",children:"@extreal-dev/extreal.integration.web.common"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@extreal-dev/extreal.integration.p2p.webrtc",children:"@extreal-dev/extreal.integration.p2p.webrtc"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"../category/release",children:"Release"})," for the correspondence between module version and each package version."]}),"\n",(0,i.jsx)(n.h3,{id:"settings",children:"Settings"}),"\n",(0,i.jsxs)(n.p,{children:["This module uses ",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc",children:"P2P.WebRTC"})," to realize P2P.\n",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc#settings",children:"WebRTC Settings"})," is required.\nPlease add the following initialization after setting up P2P.WebRTC."]}),"\n",(0,i.jsx)(n.p,{children:"Create a Client with each Provider."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'public class ClientControlScope : LifetimeScope\n{\n    protected override void Configure(IContainerBuilder builder)\n    {\n        var peerConfig = new PeerConfig("http://127.0.0.1:3010");\n        var peerClient = PeerClientProvider.Provide(peerConfig);\n        builder.RegisterComponent(peerClient);\n\n        var textChatClient = TextChatClientProvider.Provide(peerClient);\n        builder.RegisterComponent(textChatClient);\n\n        var voiceChatClient = VoiceChatClientProvider.Provide(peerClient);\n        builder.RegisterComponent(voiceChatClient);\n\n        builder.RegisterEntryPoint<ClientControlPresenter>();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"If used with WebGL, further JavaScript initialization is required.\nCreate each Adapter and call the adapt function."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { PeerAdapter } from "@extreal-dev/extreal.integration.p2p.webrtc";\nimport { TextChatAdapter, VoiceChatAdapter } from "@extreal-dev/extreal.integration.chat.webrtc";\n\nconst peerAdapter = new PeerAdapter();\npeerAdapter.adapt();\n\nconst textChatAdapter = new TextChatAdapter();\ntextChatAdapter.adapt(peerAdapter.getPeerClient);\n\nconst voiceChatAdapter = new VoiceChatAdapter();\nvoiceChatAdapter.adapt(peerAdapter.getPeerClient);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"perform-p2p-text-chat",children:"Perform P2P text chat"}),"\n",(0,i.jsxs)(n.p,{children:["Text chat uses ",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc",children:"P2P.WebRTC"})," to realize P2P.\nUse ",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc#p2p-webrtc-host-client",children:"P2P.WebRTC's API"})," to establish P2P connections."]}),"\n",(0,i.jsx)(n.p,{children:"Text chat features are provided by TextChatClient."}),"\n",(0,i.jsx)(n.p,{children:"Use the Send method to send messages."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"textChatClient.Send(message);\n"})}),"\n",(0,i.jsx)(n.p,{children:"The OnMessageReceived event is used to receive a message.\nA string message is passed as a parameter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"textChatClient.OnMessageReceived\n    .Subscribe(message =>\n    {\n        // do something\n    })\n    .AddTo(disposables);\n"})}),"\n",(0,i.jsx)(n.p,{children:"To end the text chat, use the Clear method."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"textChatClient.Clear();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"perform-p2p-voice-chat",children:"Perform P2P voice chat"}),"\n",(0,i.jsxs)(n.p,{children:["Voice chat uses ",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc",children:"P2P.WebRTC"})," to realize P2P.\nPlease use ",(0,i.jsx)(n.a,{href:"/Extreal.Guide/en/next/integration/p2p.webrtc#p2p-webrtc-host-client",children:"P2P.WebRTC's API"})," to establish P2P connections."]}),"\n",(0,i.jsx)(n.p,{children:"Voice Chat features are provided by VoiceChatClient."}),"\n",(0,i.jsx)(n.p,{children:"Use the ToggleMute method to switch mute."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"voiceChatClient.ToggleMute();\n"})}),"\n",(0,i.jsx)(n.p,{children:"The value(bool) after switching to mute is received in the OnMuted event."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"voiceChatClient.OnMuted\n    .Subscribe(muted =>\n    {\n        // do something\n    })\n    .AddTo(disposables);\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you want to specify the default value for mute, specify it in VoiceChatConfig."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"var voiceChatConfig = new VoiceChatConfig(initialMute: false);\nvar voiceChatClient = VoiceChatClientProvider.Provide(peerClient, voiceChatConfig);\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.MN)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},5788:(e,n,t)=>{t.d(n,{MN:()=>o});var i=t(1504);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),o=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},h={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=o(t),x=r,C=p["".concat(s,".").concat(x)]||p[x]||h[x]||a;return t?i.createElement(C,l(l({ref:n},d),{},{components:t})):i.createElement(C,l({ref:n},d))}));d.displayName="MDXCreateElement"}}]);