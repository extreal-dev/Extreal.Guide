"use strict";(self.webpackChunkextreal=self.webpackChunkextreal||[]).push([[2852],{7496:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=i(7624),s=i(5788);const r={sidebar_position:2},a="Core",c={id:"learning/core",title:"Core",description:"In this section, you will learn about Core.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-1.0.0/learning/core.md",sourceDirName:"learning",slug:"/learning/core",permalink:"/Extreal.Guide/en/1.0.0/learning/core",draft:!1,unlisted:!1,tags:[],version:"1.0.0",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Extreal.Guide/en/1.0.0/learning/intro"},next:{title:"Chat using Vivox",permalink:"/Extreal.Guide/en/1.0.0/learning/chat.vivox"}},o={},l=[{value:"Create project",id:"create-project",level:2},{value:"Create entry point",id:"create-entry-point",level:2},{value:"Add Logging",id:"add-logging",level:2},{value:"Add Stage Navigation",id:"add-stage-navigation",level:2},{value:"Apply MV(R)P pattern",id:"apply-mvrp-pattern",level:2},{value:"VContainer",id:"vcontainer",level:3},{value:"UniRx",id:"unirx",level:3},{value:"Next Step",id:"next-step",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.MN)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"core",children:"Core"}),"\n",(0,t.jsxs)(n.p,{children:["In this section, you will learn about ",(0,t.jsx)(n.a,{href:"../category/core",children:"Core"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Approximate learning time","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"60 min"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Unity Version","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"2021.3.16f1"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You will start by creating a project and introducing Core features, as well as VContainer and UniRx, to build the application architecture assumed by Extreal."}),"\n",(0,t.jsx)(n.h2,{id:"create-project",children:"Create project"}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"First, let's create a project."})}),"\n",(0,t.jsx)(n.p,{children:"Create a new project from Unity Hub."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"create project",src:i(1732).c+"",width:"658",height:"386"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Editor version: ",(0,t.jsx)(n.code,{children:"2021.3.16f1"})]}),"\n",(0,t.jsxs)(n.li,{children:["Template: ",(0,t.jsx)(n.code,{children:"3D"})]}),"\n",(0,t.jsxs)(n.li,{children:["Project name: ",(0,t.jsx)(n.code,{children:"ExtrealCoreLearning"})]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Once the Unity editor starts, run it to make sure there are no problems."})}),"\n",(0,t.jsx)(n.p,{children:"Let's run SampleScene.\nSince nothing is placed in the scene, nothing will happen.\nIf nothing appears in the Console, it is a successful."}),"\n",(0,t.jsx)(n.h2,{id:"create-entry-point",children:"Create entry point"}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Create a directory for the application and an App scene to serve as the entry point."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"App Scene",src:i(668).c+"",width:"464",height:"328"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Remove the initial ",(0,t.jsx)(n.code,{children:"Assets/Scenes"})," directory"]}),"\n",(0,t.jsxs)(n.li,{children:["Create a directory that will become ",(0,t.jsx)(n.code,{children:"Assets/ExtrealCoreLearning/App"})]}),"\n",(0,t.jsxs)(n.li,{children:["Create an ",(0,t.jsx)(n.code,{children:"App"})," scene in the ",(0,t.jsx)(n.code,{children:"App"})," directory"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"add-logging",children:"Add Logging"}),"\n",(0,t.jsxs)(n.p,{children:["Add ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/logging",children:"Logging"})," to the application."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Add Logging from Package Manager."})}),"\n",(0,t.jsxs)(n.p,{children:["Add Logging by specifying a Git URL.\nGit URL is obtained from ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/logging#package",children:"Package of Logging"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add Logging",src:i(3167).c+"",width:"618",height:"407"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"Extreal.Core.Logging"})," is added to Package Manager, it is successful.\nThe version depends on the timing of implementation."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Allow scripts to reference Logging."})}),"\n",(0,t.jsx)(n.p,{children:"Set Logging to Assembly Definition for the application."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Logging Assembly Configuration",src:i(9612).c+"",width:"863",height:"420"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create an Assembly Definition named ",(0,t.jsx)(n.code,{children:"ExtrealCoreLearning"})," in the ExtrealCoreLearning directory"]}),"\n",(0,t.jsxs)(n.li,{children:["Specify ",(0,t.jsx)(n.code,{children:"ExtrealCoreLearning"})," as the Root Namespace"]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"Extreal.Core.Logging"})," to the Assembly Definition References"]}),"\n",(0,t.jsxs)(n.li,{children:["Uncheck ",(0,t.jsx)(n.code,{children:"Use GUIDs"})," in Assembly Definition References"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Add a Logging setting since we want to output Debug-level logs for development."})}),"\n",(0,t.jsx)(n.p,{children:"Since the default logging level for Logging is Info, add Logging Settings to change the logging level."}),"\n",(0,t.jsxs)(n.p,{children:["Create an ",(0,t.jsx)(n.code,{children:"AppTest"})," script in the App scene by referring to ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/logging#settings",children:"Logging Settings"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create an AppTest script in the App directory"}),"\n",(0,t.jsx)(n.li,{children:"Create a GameObject with the AppTest script attached in the App scene"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using Extreal.Core.Logging;\nusing UnityEngine;\n\nnamespace ExtrealCoreLearning.App\n{\n    public class AppTest : MonoBehaviour\n    {\n        private static void InitializeApp()\n        {\n            const LogLevel logLevel = LogLevel.Debug;\n            LoggingManager.Initialize(logLevel: logLevel);\n        }\n\n        private void Awake()\n        {\n            InitializeApp();\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Since it is not possible to check the operation of Logging as it is, add processing so that logging is output immediately after initialization of Logging."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'private static void InitializeApp()\n{\n    const LogLevel logLevel = LogLevel.Debug;\n    LoggingManager.Initialize(logLevel: logLevel);\n\n    // highlight-start\n    var logger = LoggingManager.GetLogger(nameof(AppTest));\n    if (logger.IsDebug())\n    {\n        logger.LogDebug("Hello, world!");\n    }\n    // highlight-end\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Run the App scene.\nIf the Console outputs ",(0,t.jsx)(n.code,{children:"Hello, world!"}),", it is successful."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Logging assembly configuration",src:i(6928).c+"",width:"688",height:"171"})}),"\n",(0,t.jsx)(n.h2,{id:"add-stage-navigation",children:"Add Stage Navigation"}),"\n",(0,t.jsxs)(n.p,{children:["Add ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/stage-navigation",children:"Stage Navigation"})," to the application."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsxs)(n.p,{children:["Stage Navigation depends on ",(0,t.jsx)(n.a,{href:"https://github.com/Cysharp/UniTask",children:"UniTask"})," and ",(0,t.jsx)(n.a,{href:"https://github.com/neuecc/UniRx",children:"UniRx"}),", so add UniTask and UniRx first."]})}),"\n",(0,t.jsxs)(n.p,{children:["UniTask and UniRx are provided by ",(0,t.jsx)(n.a,{href:"https://openupm.com/",children:"OpenUPM"}),", so add OpenUPM settings.\nGo to ",(0,t.jsx)(n.code,{children:"Edit"})," -> ",(0,t.jsx)(n.code,{children:"Project Settings..."})," -> ",(0,t.jsx)(n.code,{children:"Package Manager"})," and add OpenUPM to Scoped Registries."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add Unitask",src:i(5236).c+"",width:"537",height:"382"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Name:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"OpenUPM\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["URL:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"https://package.openupm.com\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Scope(s):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["UniTask","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"com.cysharp\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["UniRx","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"com.neuecc\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Now that UniTask and UniRx have been added, make Stage Navigation available from the script."})}),"\n",(0,t.jsxs)(n.p,{children:["Operate the Package Manager and Assembly Definition in the same manner as for Logging.\nThe Git URL for Stage Navigation is obtained from ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/stage-navigation#package",children:"Package for Stage Navigation"}),".\nAlso set UniTask and UniRx in Assembly Definition."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add Stage Navigation",src:i(5252).c+"",width:"910",height:"386"})}),"\n",(0,t.jsx)(n.p,{children:"To test the stage navigation, let's add a title screen and transition to the title screen immediately after launching the app."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"First, add a title screen."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"TitleScreen",src:i(496).c+"",width:"393",height:"249"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.code,{children:"TitleScreen"})," directory in the same hierarchy as the App directory"]}),"\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.code,{children:"TitleScreen"})," scene in it"]}),"\n",(0,t.jsx)(n.li,{children:"Remove the default GameObjects such as the camera from the TitleScreen scene and make the scene empty"}),"\n",(0,t.jsxs)(n.li,{children:["Add a ",(0,t.jsx)(n.code,{children:"Canvas"})," to the scene. In the inspector, make the following settings\n",(0,t.jsx)(n.img,{alt:"Title Screen Canvas",src:i(1796).c+"",width:"449",height:"156"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Canvas Scaler","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["UI Scale Mode: ",(0,t.jsx)(n.code,{children:"Scale With Screen Size"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Add an ",(0,t.jsx)(n.code,{children:"Image"})," under the Canvas. Make the following settings in the inspector\n",(0,t.jsx)(n.img,{alt:"Title Screen Image",src:i(3272).c+"",width:"450",height:"382"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Rect Transform","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Anchor Presets","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["X: ",(0,t.jsx)(n.code,{children:"stretch"})]}),"\n",(0,t.jsxs)(n.li,{children:["Y: ",(0,t.jsx)(n.code,{children:"stretch"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["All from Left to Buttom are ",(0,t.jsx)(n.code,{children:"0 (Zero)"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Image","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Color","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Hexadecimal: ",(0,t.jsx)(n.code,{children:"FF6F61"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"Text - TextMeshPro"})," under ",(0,t.jsx)(n.code,{children:"Image"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a title ",(0,t.jsx)(n.code,{children:"Extreal Core Learning"})]}),"\n",(0,t.jsx)(n.li,{children:"You can decide the size and position freely"}),"\n",(0,t.jsxs)(n.li,{children:["When the TMP Importer appears, select ",(0,t.jsx)(n.code,{children:"Import TMP Essentials"}),". Only the first time you use TextMeshPro, the TMP Importer will appear. Once imported, close the TMP Importer"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"Button - TextMeshPro"})," under Image","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a button called ",(0,t.jsx)(n.code,{children:"Go"})]}),"\n",(0,t.jsx)(n.li,{children:"You can decide the size and position of this button freely as well"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Now that the title screen has been added, create the stage settings."})}),"\n",(0,t.jsxs)(n.p,{children:["Refer to ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/core/stage-navigation#settings",children:"Settings for Stage Navigation"})," to create stage settings.\nThe three types to be created in the stage settings are placed in the App directory."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public enum StageName\n{\n    TitleStage = 0,\n}\npublic enum SceneName\n{\n    TitleScreen = 100,\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once the three types have been created, create a ",(0,t.jsx)(n.code,{children:"StageConfig"})," object."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"StageConfig",src:i(320).c+"",width:"1032",height:"310"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.code,{children:"StageConfig"})," object in the App directory from the Assets menu"]}),"\n",(0,t.jsx)(n.li,{children:"Set the stage of the title screen in the StageConfig object"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Now that the stage transition is ready, add a processing to make the transition to the title screen immediately after the application is launched."})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Add the SerializeField and Start method to the AppTest script"}),"\n",(0,t.jsx)(n.li,{children:"Specify the StageConfig object in the inspector"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using Extreal.Core.Logging;\n// highlight-start\nusing Extreal.Core.StageNavigation;\n// highlight-end\nusing UnityEngine;\n\nnamespace ExtrealCoreLearning.App\n{\n    public class AppTest : MonoBehaviour\n    {\n        private static void InitializeApp()\n        {\n            // Omitted due to no changes\n        }\n\n        private void Awake()\n        {\n            // Omitted due to no changes\n        }\n        \n        // highlight-start\n        [SerializeField] private StageConfig stageConfig;\n\n        private void Start()\n        {\n            var stageNavigator = new StageNavigator<StageName, SceneName>(stageConfig);\n            stageNavigator.ReplaceAsync(StageName.TitleStage);\n        }\n        // highlight-end\n    }\n}\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Let's run the App scene."})}),"\n",(0,t.jsx)(n.p,{children:"Running the App scene in this state will result in the following error."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Stage transition error",src:i(804).c+"",width:"606",height:"290"})}),"\n",(0,t.jsxs)(n.p,{children:["Add a ",(0,t.jsx)(n.code,{children:"TitleScreen"})," scene to ",(0,t.jsx)(n.code,{children:"Scenes In Build"})," in Build Settings."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Let's run the App scene again."})}),"\n",(0,t.jsxs)(n.p,{children:["If the title screen appears and the Console shows ",(0,t.jsx)(n.code,{children:"[Debug:StageNavigator] Transitions to 'TitleStage'"}),", it is successful."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Stage transition success",src:i(7512).c+"",width:"606",height:"676"})}),"\n",(0,t.jsx)(n.h2,{id:"apply-mvrp-pattern",children:"Apply MV(R)P pattern"}),"\n",(0,t.jsxs)(n.p,{children:["That is all the Core features that Extreal provides, but we would like to add ",(0,t.jsx)(n.a,{href:"https://vcontainer.hadashikick.jp/",children:"VContainer"})," to get closer to ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/intro#application",children:"the application architecture assumed by Extreal"}),"."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Add an avatar selection screen to which the title screen transitions."})}),"\n",(0,t.jsx)(n.p,{children:"The avatar selection screen is only used as a transition destination, so it is created by copying the title screen."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Avatar Selection Screen",src:i(5552).c+"",width:"902",height:"457"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create an ",(0,t.jsx)(n.code,{children:"AvatarSelectionScreen"})," directory in the same hierarchy as the App directory"]}),"\n",(0,t.jsxs)(n.li,{children:["Create an ",(0,t.jsx)(n.code,{children:"AvatarSelectionScreen"})," scene in it"]}),"\n",(0,t.jsx)(n.li,{children:"Remove the default GameObjects such as the camera in the AvatarSelectionScreen scene and make the scene empty"}),"\n",(0,t.jsx)(n.li,{children:"Copy the Canvas and EventSystem from the TitleScreen scene and paste them into the AvatarSelectionScreen scene"}),"\n",(0,t.jsxs)(n.li,{children:["Change the title to ",(0,t.jsx)(n.code,{children:"Avatar Selection"})]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Then add the stage settings."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Avatar Selection Stage Configuration",src:i(3024).c+"",width:"437",height:"401"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"AvatarSelectionStage"})," to StageName and ",(0,t.jsx)(n.code,{children:"AvatarSelectionScreen"})," to SceneName"]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"AvatarSelectionStage"})," in the StageConfig object inspector"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Add the ",(0,t.jsx)(n.code,{children:"AvatarSelectionScreen"})," scene to ",(0,t.jsx)(n.code,{children:"Scenes In Build"})," in Build Settings."]}),"\n",(0,t.jsx)(n.p,{children:"The UI and stage settings are ready."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Add VContainer to your application."})}),"\n",(0,t.jsx)(n.p,{children:"VContainer is obtained from OpenUPM as well as UniTask and UniRx."}),"\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.code,{children:"Edit"})," -> ",(0,t.jsx)(n.code,{children:"Project Settings..."})," -> ",(0,t.jsx)(n.code,{children:"Package Manager"})," and add the Scope(s) from OpenUPM."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add VContainer",src:i(7700).c+"",width:"543",height:"385"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["VContainer:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"jp.hadashikick\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Then add VContainer to Package Manager and Assembly Definition."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"VContainer setting",src:i(4884).c+"",width:"943",height:"407"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select Packages: ",(0,t.jsx)(n.code,{children:"My Registries"})," in Package Manager and install VContainer"]}),"\n",(0,t.jsx)(n.li,{children:"Set VContainer to Assembly Definition of the application"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Now you can use VContainer."}),"\n",(0,t.jsx)(n.h3,{id:"vcontainer",children:"VContainer"}),"\n",(0,t.jsx)(n.p,{children:"Rebuild the AppTest created for confirmation using VContainer."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"First, create a Presenter script as an entry point."})}),"\n",(0,t.jsx)(n.p,{children:"Create it in the App directory.\nWhen the App scene starts, make the transition to the title screen."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using System.Threading;\nusing Cysharp.Threading.Tasks;\nusing Extreal.Core.StageNavigation;\nusing VContainer.Unity;\n\nnamespace ExtrealCoreLearning.App\n{\n    public class AppPresenter : IAsyncStartable\n    {\n        private StageNavigator<StageName, SceneName> stageNavigator;\n\n        public AppPresenter(StageNavigator<StageName, SceneName> stageNavigator)\n        {\n            this.stageNavigator = stageNavigator;\n        }\n\n        public async UniTask StartAsync(CancellationToken cancellation)\n        {\n            await stageNavigator.ReplaceAsync(StageName.TitleStage);\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Next, create a Scope script as a LifetimeScope for VContainer."})}),"\n",(0,t.jsx)(n.p,{children:"Create it in the App directory.\nOverride Awake in the Scope script to configure Logging before VContainer processing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using Extreal.Core.Logging;\nusing Extreal.Core.StageNavigation;\nusing UnityEngine;\nusing VContainer;\nusing VContainer.Unity;\n\nnamespace ExtrealCoreLearning.App\n{\n    public class AppScope : LifetimeScope\n    {\n        [SerializeField] private StageConfig stageConfig;\n\n        private static void InitializeApp()\n        {\n            const LogLevel logLevel = LogLevel.Debug;\n            LoggingManager.Initialize(logLevel: logLevel);\n\n            var logger = LoggingManager.GetLogger(nameof(AppScope));\n            if (logger.IsDebug())\n            {\n                logger.LogDebug("Hello, world!");\n            }\n        }\n\n        protected override void Awake()\n        {\n            InitializeApp();\n            base.Awake();\n        }\n\n        protected override void Configure(IContainerBuilder builder)\n        {\n            builder.RegisterComponent(stageConfig).AsImplementedInterfaces();\n            builder.Register<StageNavigator<StageName, SceneName>>(Lifetime.Singleton);\n\n            builder.RegisterEntryPoint<AppPresenter>();\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"StageConfig, StageNavigator and AppPresenter as entry points are registered.\nWith this registration, StageConfig is set to StageNavigator and StageNavigator is set to AppPresenter.\nIn this way, the DI container provided by VContainer is used to build up the object structure so that each object can execute processing."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Set the Scope script to the App scene."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"AppScope",src:i(5948).c+"",width:"832",height:"356"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a GameObject with the AppScope script attached to the App scene with the name ",(0,t.jsx)(n.code,{children:"Scope"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Set the StageConfig object in the inspector"}),"\n",(0,t.jsx)(n.li,{children:"Remove the AppTest script and the GameObject with the AppTest script attached in the App scene as they are no longer needed"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Run the App scene.\nIf the title screen and Console log output appear as before, it is successful."}),"\n",(0,t.jsx)(n.h3,{id:"unirx",children:"UniRx"}),"\n",(0,t.jsx)(n.p,{children:"Implement the Go button on the title screen using UniRx."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Create a View script for the title screen."})}),"\n",(0,t.jsx)(n.p,{children:"Create it in the TitleScreen directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using System;\nusing UniRx;\nusing UnityEngine;\nusing UnityEngine.UI;\n\nnamespace ExtrealCoreLearning.TitleScreen\n{\n    public class TitleScreenView : MonoBehaviour\n    {\n        [SerializeField] private Button goButton;\n\n        public IObservable<Unit> OnGoButtonClicked\n            => goButton.OnClickAsObservable().TakeUntilDestroy(this);\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This defines ",(0,t.jsx)(n.code,{children:"OnGoButtonClicked"}),", which notifies an event when the Go button is pressed using UniRx."]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Next, create a Presenter script that will transition to the avatar selection screen when the Go button is pressed."})}),"\n",(0,t.jsx)(n.p,{children:"Create it in the TitleScreen directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using System;\nusing Cysharp.Threading.Tasks;\nusing Extreal.Core.StageNavigation;\nusing ExtrealCoreLearning.App;\nusing UniRx;\nusing VContainer.Unity;\n\nnamespace ExtrealCoreLearning.TitleScreen\n{\n    public class TitleScreenPresenter : IInitializable, IDisposable\n    {\n        private StageNavigator<StageName, SceneName> stageNavigator;\n\n        private TitleScreenView titleScreenView;\n\n        private CompositeDisposable compositeDisposable = new CompositeDisposable();\n\n        public TitleScreenPresenter(StageNavigator<StageName, SceneName> stageNavigator,\n            TitleScreenView titleScreenView)\n        {\n            this.stageNavigator = stageNavigator;\n            this.titleScreenView = titleScreenView;\n        }\n\n        public void Initialize()\n        {\n            titleScreenView.OnGoButtonClicked.Subscribe(_ =>\n            {\n                stageNavigator.ReplaceAsync(StageName.AvatarSelectionStage).Forget();\n            }).AddTo(compositeDisposable);\n        }\n\n        public void Dispose()\n        {\n            compositeDisposable?.Dispose();\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This maps the event notification of the Go button to the transition to the avatar selection screen."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Last, create a Scope script that ties the View and Presenter together."})}),"\n",(0,t.jsx)(n.p,{children:"Create it in the TitleScreen directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using UnityEngine;\nusing VContainer;\nusing VContainer.Unity;\n\nnamespace ExtrealCoreLearning.TitleScreen\n{\n    public class TitleScreenScope : LifetimeScope\n    {\n        [SerializeField] private TitleScreenView titleScreenView;\n\n        protected override void Configure(IContainerBuilder builder)\n        {\n            builder.RegisterComponent(titleScreenView);\n\n            builder.RegisterEntryPoint<TitleScreenPresenter>();\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set the View and Scope scripts to the TitleScreen scene."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"AppScope",src:i(9828).c+"",width:"855",height:"614"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a GameObject with the TitleScreenView script attached to the TitleScreen scene with the name ",(0,t.jsx)(n.code,{children:"View"})]}),"\n",(0,t.jsx)(n.li,{children:"Set up a Button object in the inspector"}),"\n",(0,t.jsxs)(n.li,{children:["Create a GameObject with the TitleScreenScope script attached to the TitleScreen scene with the name ",(0,t.jsx)(n.code,{children:"Scope"})]}),"\n",(0,t.jsx)(n.li,{children:"Set the View object in the inspector"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Let's run the App scene."})}),"\n",(0,t.jsx)(n.p,{children:"If you run the App scene in this state, you will get the following error."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"AppScope",src:i(7752).c+"",width:"708",height:"344"})}),"\n",(0,t.jsx)(n.p,{children:"StageNavigator is set to TitleScreenPresenter, but it is not registered in the scope, resulting in the error.\nThis error occurs because StageNavigator is in AppScope and TitleScreenPresenter is in TitleScreenScope, which are different scopes."}),"\n",(0,t.jsx)(n.p,{children:"In VContainer, you can specify the parent of a scope to extend the object's search range to the parent.\nSpecifying AppScope for Parent in the TitleScreenScope inspector resolves this error."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"AppScope",src:i(1524).c+"",width:"452",height:"366"})}),"\n",(0,t.jsx)(n.p,{children:"In this way, scopes are created with hierarchy in mind.\nDesign the overall scope so that the commonly used scopes are more parental."}),"\n",(0,t.jsx)(n.admonition,{title:"step",type:"info",children:(0,t.jsx)(n.p,{children:"Let's run the App scene again."})}),"\n",(0,t.jsx)(n.p,{children:"If you can transition from the title screen to the avatar selection screen, it is successful."}),"\n",(0,t.jsx)(n.h2,{id:"next-step",children:"Next Step"}),"\n",(0,t.jsx)(n.p,{children:"This concludes our hands-on with Core.\nThank you for your time."}),"\n",(0,t.jsxs)(n.p,{children:["Through this hands-on, you have already built the features required for ",(0,t.jsx)(n.a,{href:"/Extreal.Guide/en/1.0.0/intro#application",children:"the application architecture assumed by Extreal"}),".\nAs a next step, you might be interested in how the architecture you built in this hands-on will be used in a more serious application.\nTo meet your expectations, we provide ",(0,t.jsx)(n.a,{href:"../category/sample-application",children:"Sample Application"})," as an example of a full-scale implementation.\nPlease take a look at ",(0,t.jsx)(n.a,{href:"../category/sample-application",children:"Sample Application"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.MN)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},5788:(e,n,i)=>{i.d(n,{MN:()=>l});var t=i(1504);function s(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){s(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function c(e,n){if(null==e)return{};var i,t,s=function(e,n){if(null==e)return{};var i,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(s[i]=e[i]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(s[i]=e[i])}return s}var o=t.createContext({}),l=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var i=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),p=l(i),g=s,x=p["".concat(o,".").concat(g)]||p[g]||d[g]||r;return i?t.createElement(x,a(a({ref:n},h),{},{components:i})):t.createElement(x,a({ref:n},h))}));h.displayName="MDXCreateElement"},668:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-app-scene-f3c3ff0917931aa467cab7d525b60e53.png"},1732:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-create-project-b1ad19b78bf2800f03ddb44854bc94b6.png"},9612:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-logging-assembly-787825f4b5a62caaec7da422925c168c.png"},3167:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-logging-package-5b92cf39e900bbbc3612b0b77074660d.png"},6928:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-logging-success-e5cc020fc0b58879b0457aa0ba4c3585.png"},5948:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-appscope-418745f96414528d86a1b823af42fa25.png"},5552:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-avatarselection-167bd1d16ff8cff0c07f343bfe9fea26.png"},7752:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-error-41eedec698c71fb75d612af204c3251e.png"},1524:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-parent-c326ff7d86c5ac94ecdd44bcdc2386b3.png"},4884:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-pmandad-73fe677d316f1fe417bdae1335091f49.png"},3024:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-stageconfig-1581de09c38ef2370c9fb5d73e4a327d.png"},7700:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-thirdparty-5c1e5ea29165f2afe2ce2f6f14540815.png"},9828:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-mvp-titlescreenobject-5e9c075ccb3fb9bb517a0ac18d31d8b7.png"},5252:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-add-e8aa8d19b40133d5beaeb8516d00a487.png"},1796:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-canvas-8722869caafb1bcb8f07bc6db3412e66.png"},320:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-config-9454510a01a2fe14d552f236a745e03b.png"},804:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-error-e364088fd00842b3dc9fa4fe46f61345.png"},3272:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-image-c6113f5c457a111ccea3eb1a103f8582.png"},7512:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-success-f02b94fa36c4d6cf684e706518a27fdd.png"},496:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-titlescreen-55d7d4bfff7bc56e29b1d7a164678c6e.png"},5236:(e,n,i)=>{i.d(n,{c:()=>t});const t=i.p+"assets/images/learning-core-stagenavigation-unitask-9805eb8fc21b47bbb6979491e13b1009.png"}}]);