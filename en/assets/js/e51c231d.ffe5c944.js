"use strict";(self.webpackChunkextreal=self.webpackChunkextreal||[]).push([[7356],{2736:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var t=i(7624),a=i(5788);const r={sidebar_position:4},l="Common for Web",s={id:"integration/web.common",title:"Common for Web",description:"What for?",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/integration/web.common.md",sourceDirName:"integration",slug:"/integration/web.common",permalink:"/Extreal.Guide/en/next/integration/web.common",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Asset Workflow using Addressables",permalink:"/Extreal.Guide/en/next/integration/asset-workflow.addressables"},next:{title:"P2P using WebRTC",permalink:"/Extreal.Guide/en/next/integration/p2p.webrtc"}},c={},o=[{value:"What for?",id:"what-for",level:2},{value:"Specification",id:"specification",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Installation",id:"installation",level:2},{value:"Package",id:"package",level:3},{value:"Unity",id:"unity",level:4},{value:"npm",id:"npm",level:4},{value:"Dependencies",id:"dependencies",level:3},{value:"Unity",id:"unity-1",level:4},{value:"npm",id:"npm-1",level:4},{value:"Settings",id:"settings",level:3},{value:"Usage",id:"usage",level:2},{value:"Call JavaScript from C#",id:"call-javascript-from-c",level:3},{value:"Callback from JavaScript to C#",id:"callback-from-javascript-to-c",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.MN)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"common-for-web",children:"Common for Web"}),"\n",(0,t.jsx)(n.h2,{id:"what-for",children:"What for?"}),"\n",(0,t.jsx)(n.p,{children:"Unity allows users to create browser-oriented applications using the WebGL platform.\nBrowser-oriented applications require calling processing and passing data between Unity(C#) and the browser(JavaScript)."}),"\n",(0,t.jsx)(n.p,{children:"This module hides the slightly more complex mechanism of C# and JavaScript integration provided by Unity and provides a WebGL helper for easy C# and JavaScript interaction."}),"\n",(0,t.jsx)(n.h2,{id:"specification",children:"Specification"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You can call JavaScript from C#."}),"\n",(0,t.jsx)(n.li,{children:"You can do callbacks from JavaScript to C#."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.mermaid,{chart:"classDiagram\n\n    WebGLHelper ..> WebGLHelperConfig\n    WebGLHelper ..> helper\n\n    class WebGLHelper {\n        <<C#>>\n        +Initialize(webGLHelperConfig)$ void\n        +CallAction(name, str1, str2)$ void\n        +CallFunction(name, str1, str2)$ string\n        +AddCallback(name, action)$ void\n    }\n    \n    class WebGLHelperConfig {\n        <<C#>>\n        +IsDebug bool\n    }\n\n    class helper {\n        <<TypeScript>>\n        +addAction(name, action) void\n        +addFunction(name, func) void\n        +callback(name, strParam1, strParam2) void\n        +isDebug boolean\n        +waitUntil(condition, cancel, interval) void\n        +isAsync(func) boolean\n    }"}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.h3,{id:"package",children:"Package"}),"\n",(0,t.jsx)(n.h4,{id:"unity",children:"Unity"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"https://github.com/extreal-dev/Extreal.Integration.Web.Common.git\n"})}),"\n",(0,t.jsx)(n.h4,{id:"npm",children:"npm"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"@extreal-dev/extreal.integration.web.common\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsx)(n.p,{children:"This module uses the following packages."}),"\n",(0,t.jsx)(n.h4,{id:"unity-1",children:"Unity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/ja-jp/dotnet/api/system.text.json",children:"System.Text.Json"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"npm-1",children:"npm"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"There are no dependencies."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"settings",children:"Settings"}),"\n",(0,t.jsx)(n.p,{children:"The WebGL helper needs to be initialized.\nPlease initialize the WebGL helper when you start the application."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"WebGLHelper.Initialize();\n"})}),"\n",(0,t.jsx)(n.p,{children:"The browser can log the status of JavaScript calls.\nThe default is to not output logs, so if you want to output logs, specify them in WebGLHelperConfig."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"WebGLHelper.Initialize(new WebGLHelperConfig { IsDebug = true });\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"call-javascript-from-c",children:"Call JavaScript from C#"}),"\n",(0,t.jsx)(n.p,{children:"C# to JavaScript calls provide only the following signatures."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Function with no return value","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Arguments: 2 strings"}),"\n",(0,t.jsx)(n.li,{children:"Return value: None"}),"\n",(0,t.jsxs)(n.li,{children:["Example:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const action = (param1: string, param2: string): void => {\n    // do something\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Function with return value","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Arguments: 2 strings"}),"\n",(0,t.jsx)(n.li,{children:"Return value: string"}),"\n",(0,t.jsxs)(n.li,{children:["Example:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const func = (param1: string, param2: string): string => {\n    return "do something";\n}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Arguments and return value are strings, so use JSON if you want to handle complex data structures."})}),"\n",(0,t.jsx)(n.p,{children:"The C# side calls JavaScript using WebGLHelper's CallAction/CallFunction.\nAction corresponds to a function without a return value and Function corresponds to a function with a return value.\nThe mapping between C# and JavaScript is done by the string target name."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Sample : DisposableBase\n{\n    public void DoAction(string param1, string param2)\n        => WebGLHelper.CallAction("DoAction", param1, param2);\n\n    public string DoFunction(string param1, string param2)\n        => WebGLHelper.CallFunction("DoFunction", param1, param2);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The JavaScript side uses addAction/addFunction."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { addAction, addFunction } from "@extreal-dev/extreal.integration.web.common";\n\naddAction("DoAction", (str1, str2) => {\n    // do something\n});\n\naddFunction("DoFunction", (str1, str2) => {\n    return "do something";\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"callback-from-javascript-to-c",children:"Callback from JavaScript to C#"}),"\n",(0,t.jsx)(n.p,{children:"Only the following signatures are provided for JavaScript to C# callback."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Action<string, string>"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Arguments and return value are strings, so use JSON if you want to handle complex data structures."})}),"\n",(0,t.jsx)(n.p,{children:"The JavaScript side uses callback.\nThe mapping between JavaScript and C# is done by the string target name."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { callback } from "@extreal-dev/extreal.integration.web.common";\n\ncallback("HandleOnCallback", "param1", "param2");\n'})}),"\n",(0,t.jsx)(n.p,{children:"The C# side uses WebGLHelper's AddCallback.\nIn this example implementation, the callback is received and event notification is sent."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Sample : DisposableBase\n{\n    public IObservable<string> OnCallback => onCallback;\n    private readonly Subject<string> onCallback = new Subject<string>();\n\n    private static Sample instance;\n    public Sample()\n    {\n        instance = this;\n        WebGLHelper.AddCallback(nameof(HandleOnCallback), HandleOnCallback);\n    }\n\n    [MonoPInvokeCallback(typeof(Action<string, string>))]\n    private static void HandleOnCallback(string str1, string str2)\n        => instance.onCallback.OnNext($"received {str1} {str2} in callback");\n\n    protected override void ReleaseManagedResources() => onCallback.Dispose();\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.MN)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},5788:(e,n,i)=>{i.d(n,{MN:()=>o});var t=i(1504);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=t.createContext({}),o=function(e){var n=t.useContext(c),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=o(i),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||r;return i?t.createElement(m,l(l({ref:n},p),{},{components:i})):t.createElement(m,l({ref:n},p))}));p.displayName="MDXCreateElement"}}]);